// Code generated by go-enum DO NOT EDIT.
// Version: 0.6.0
// Revision: 919e61c0174b91303753ee3898569a01abb32c97
// Build Date: 2023-12-18T15:54:43Z
// Built By: goreleaser

package cmd

import (
	"fmt"
	"strings"
)

const (
	// EUIFormatCOLON is a EUIFormat of type COLON.
	EUIFormatCOLON EUIFormat = "COLON"
	// EUIFormatDASH is a EUIFormat of type DASH.
	EUIFormatDASH EUIFormat = "DASH"
	// EUIFormatDOT is a EUIFormat of type DOT.
	EUIFormatDOT EUIFormat = "DOT"
	// EUIFormatPLAIN is a EUIFormat of type PLAIN.
	EUIFormatPLAIN EUIFormat = "PLAIN"
)

var ErrInvalidEUIFormat = fmt.Errorf("not a valid EUIFormat, try [%s]", strings.Join(_EUIFormatNames, ", "))

var _EUIFormatNames = []string{
	string(EUIFormatCOLON),
	string(EUIFormatDASH),
	string(EUIFormatDOT),
	string(EUIFormatPLAIN),
}

// EUIFormatNames returns a list of possible string values of EUIFormat.
func EUIFormatNames() []string {
	tmp := make([]string, len(_EUIFormatNames))
	copy(tmp, _EUIFormatNames)
	return tmp
}

// EUIFormatValues returns a list of the values for EUIFormat
func EUIFormatValues() []EUIFormat {
	return []EUIFormat{
		EUIFormatCOLON,
		EUIFormatDASH,
		EUIFormatDOT,
		EUIFormatPLAIN,
	}
}

// String implements the Stringer interface.
func (x EUIFormat) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x EUIFormat) IsValid() bool {
	_, err := ParseEUIFormat(string(x))
	return err == nil
}

var _EUIFormatValue = map[string]EUIFormat{
	"COLON": EUIFormatCOLON,
	"colon": EUIFormatCOLON,
	"DASH":  EUIFormatDASH,
	"dash":  EUIFormatDASH,
	"DOT":   EUIFormatDOT,
	"dot":   EUIFormatDOT,
	"PLAIN": EUIFormatPLAIN,
	"plain": EUIFormatPLAIN,
}

// ParseEUIFormat attempts to convert a string to a EUIFormat.
func ParseEUIFormat(name string) (EUIFormat, error) {
	if x, ok := _EUIFormatValue[name]; ok {
		return x, nil
	}
	return EUIFormat(""), fmt.Errorf("%s is %w", name, ErrInvalidEUIFormat)
}

// Set implements the Golang flag.Value interface func.
func (x *EUIFormat) Set(val string) error {
	v, err := ParseEUIFormat(val)
	*x = v
	return err
}

// Get implements the Golang flag.Getter interface func.
func (x *EUIFormat) Get() interface{} {
	return *x
}

// Type implements the github.com/spf13/pFlag Value interface.
func (x *EUIFormat) Type() string {
	return "EUIFormat"
}
